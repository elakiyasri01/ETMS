@model Employee_TMS.Entities.Employee

@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .profile-container {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 20px;
        max-width: 500px;
        margin: 20px auto;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }

        .profile-container h4 {
            margin-bottom: 10px;
        }

    .profile-row {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .profile-label {
        flex: 0 0 200px;
        font-weight: bold;
    }

    .profile-value {
        flex: 1;
    }

    .image-container {
        width: 75px;
        height: 75px;
        background-color: white;
        border-radius: 50%; 
        overflow: hidden; 
        position: relative; 
    }
    
    .circular-image {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 100%;
        max-height: 100%;
    }
</style>

<h1>Profile</h1>
               @if (Model.ProfileImage ==null && Model.ProfileImageName == null)
                {

                     <div class="image-container">
                            <img src="~/images/default-profile.jpg" alt="Default Profile Image" class="circular-image" width="72" height="72" />
                        </div>
                }
              else{
               <div class="image-container">
              @{string base64Image = Convert.ToBase64String(Model.ProfileImage);
                 string imgSrc = $"data:image/png;base64,{base64Image}";
             <img src="@imgSrc" class="circular-image"alt="Image" width="72" height="72"/>
                  }
              </div>
                }

<div class="profile-container">
    <h4>Employee</h4>
    <hr />
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.EmployeeId)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.EmployeeId)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.FullName)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.FullName)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.Department)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.Department)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.SecurityQuestion)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.SecurityQuestion)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.SecurityAnswer)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.SecurityAnswer)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.Designation)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.Designation)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.Email)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.Email)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.Gender)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.Gender)</span>
    </div>
    <div class="profile-row">
        <span class="profile-label">@Html.DisplayNameFor(model => model.ReportingTo)</span>
        <span class="profile-value">@Html.DisplayFor(model => model.ReportingTo)</span>
    </div>
   
</div>

<div>
    @Html.ActionLink("Edit Profile", "EditProfile", "Employee", new { EmployeeId = Model.EmployeeId }, null)
    |
    <a asp-action="EmployeeDashboard">Back to List</a>
</div>
